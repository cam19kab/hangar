# All-in-one solution for AWS, Azure & GCloud Installer

____
As a Developer (Client, Capgemini, Third Party, anyone on the Web) I want to be able to download a single executable so I will be able to run it without an installation process (run the executable directly from the “Downloads” directory if necessary) and have all the CLIs for Azure, AWS & GCloud available.
____


This solution uses a *Dockerfile* to create an Image with all the required tools ready to use. 

## Included Tools

Following toolkits are included in the solution:

- AWS 
- Azure 
- GCloud 
- Kubectl
- Terraform 
- GitHub

**Plus (+)** other tools like `unzip`, `git`, `wget` & `python`

## How to use

. **Build** the image `docker build -t hangar -f .\setup\Dockerfile .`
. **Execute** a command inside the image `docker run --rm -it hangar gcloud auth login` or open an **interactive shell** `docker run --rm -it hangar bash`

IMPORTANT: The container is Stateless -- all the information (credentials, configurations, etc.) created inside the session will be lost at the end of the lifecycle of the container. 

TIP: If you want to have **persistence between executions** or **map the configuration files from your local host** check the next section for mapping volumes.

## Volumes Configuration

For Windows use:

```
docker run --rm -it -v /Users/$env:UserName/AppData/Roaming/gcloud:/root/.config/gcloud -v /Users/$env:UserName/.aws:/root/.aws -v /Users/$env:UserName/.azure:/root/.azure hangar bash
```

For Linux use:

```
docker run --rm -it -v /root/.config/gcloud:/root/.config/gcloud -v /root/.aws:/root/.aws -v /root/.azure:/root/.azure hangar bash
```


### GCloud Volumes

#### Windows

```
docker run --rm -it -v /Users/$env:UserName/AppData/Roaming/gcloud:/root/.config/gcloud hangar bash
```

GCloud CLI configuration on Windows is stored on `C:\Users\username\AppData\Roaming\gcloud` or `$HOME/AppData/Roaming/gcloud` 


#### Linux

```
docker run --rm -it -v /root/.config/gcloud:/root/.config/gcloud hangar bash
```

GCloud CLI configuration on Linux is stored on `/root/.config/gcloud`

### AWS Volumes

#### Windows

```
docker run --rm -it -v /Users/$env:UserName/.aws:/root/.aws hangar bash
```

AWS CLI configuration on Windows is stored on `C:\Users\username\.aws\` or `$HOME\.aws\` 


#### Linux

```
docker run --rm -it -v /root/.aws:/root/.aws hangar bash
```

AWS CLI configuration on Linux is stored on `/root/.aws`

### Azure Volumes


#### Windows

```
docker run --rm -it -v /Users/$env:UserName/.azure:/root/.azure hangar bash
```

Azure CLI configuration on Windows is stored on `C:\Users\username\.azure\` or `$HOME\.azure\` 


#### Linux

```
docker run --rm -it -v /root/.azure:/root/.azure hangar bash
```

Azure CLI configuration on Linux is stored on `/root/.azure`

### Kubectl Volumes WIP

```
/root/.kube
```

### Terraform Volumes WIP

https://www.terraform.io/cli/config/config-file#locations

### SSH Keys WIP

```
/root/.ssh

${HOME}/.ssh
```