# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,$language,"

# Path to the templates.
templatesPath="scripts/pipelines/github/templates/complete"

# Path to the common templates folder
commonTemplatesPipelinePath="scripts/pipelines/common/templates/complete"

# YAML file name.
yamlFile="complete-pipeline.yml"

# Script name.
scriptFileBuild="build.sh"
scriptFileTest="test.sh"
scriptFileQuality="quality.sh"

# Source branch.
sourceBranch="feature/build-test-quality"

# Function that copies the script to build the application.
function copyScript {
    # Copy the script.
    cp "${hangarPath}/${commonTemplatesPipelinePath}/${language}-${scriptFileBuild}" "${localDirectory}/${scriptFilePath}/${scriptFileBuild}"
    cp "${hangarPath}/${commonTemplatesPipelinePath}/${language}-${scriptFileTest}" "${localDirectory}/${scriptFilePath}/${scriptFileTest}"
    cp "${hangarPath}/${commonTemplatesPipelinePath}/${language}-${scriptFileQuality}" "${localDirectory}/${scriptFilePath}/${scriptFileQuality}"
}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
    # if the user did not specify a custom target-directory
    # we default to the language specific defaults

    if test -z $targetDirectory
    then
        setTargetDirectory
    fi

    export targetDirectory
    specificEnvSubstList='${targetDirectory}'

    
    repoURL=$(git config --get remote.origin.url)
    repoNameWithGit="${repoURL/https:\/\/github.com\/}"
    repoName="${repoNameWithGit/.git}"
    gh secret set SONARQUBE_TOKEN -a actions -b "$sonarToken" -R "$repoName"

    if test -z $targetDirectory
    then
        setTargetDirectory
    fi

    export sonarUrl
    export targetDirectory
    specificEnvSubstList='${sonarUrl} ${targetDirectory}'
}
