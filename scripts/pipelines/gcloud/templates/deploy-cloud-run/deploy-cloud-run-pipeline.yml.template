steps:
- name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  secretEnv: ['registry_credentials']
  args:
    - -c
    - |
      set -e
      echo -e "\n\n"
      echo "SETTING UP ENVIRONMENT"
      echo ""
      ./.pipelines/scripts/deploy-cloud-run-setup-environment.sh "$_REGISTRY"
      echo -e "\n\n"
      echo "LOADING CREDENTIALS AND GETTING REGISTRY"
      echo $$registry_credentials > credentials.env
      . credentials.env
      rm credentials.env
      # We get the name of the registry from the full image name
      firstPartImage=$(echo $imageName | cut -d'/' -f1)
      echo $firstPartImage | grep "\." > /dev/null && REGISTRY=$firstPartImage || REGISTRY="docker.io"
      echo -e "\n\n"
      echo "EXECUTING deploy-cloud-run.sh"
      echo "./.pipelines/scripts/deploy-cloud-run.sh -d \"$PROJECT_ID\" -b \"$_BRANCH_NAME\" -n \"$_SERVICE_NAME\" -i \"$_IMAGE_NAME\" -g \"$_GCLOUD_REGION\" -t \"$_PORT\" -r \"$$REGISTRY\" -u \"***\" -p \"****\" -a \"****\" -s \"****\" -l \"$$AWS_REGION\""
      ./.pipelines/scripts/deploy-cloud-run.sh -d "$PROJECT_ID" -b "$_BRANCH_NAME" -n "$_SERVICE_NAME" -i "$_IMAGE_NAME" -g "$_GCLOUD_REGION" -t "$_PORT" -r "$$REGISTRY" -u "$$DOCKER_USER" -p "$$DOCKER_PASSWORD" -a "$$AWS_ACCESS_KEY" -s "$$AWS_SECRET_ACCESS_KEY" -l "$$AWS_REGION"

# mark to insert step for additonal artifact #

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/registry-credentials/versions/latest
    env: 'registry_credentials'

# mark to insert entry in artifact for additonal artifact #
