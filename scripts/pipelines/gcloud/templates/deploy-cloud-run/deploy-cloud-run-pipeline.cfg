#!/bin/bash
# Mandatory flags.
mandatoryFlags="$pipelineName,$localDirectory,$serviceName,$imageName,$gCloudRegion,"
# Path to the templates.
templatesPath="scripts/pipelines/gcloud/templates/deploy-cloud-run"
# Path to the common templates folder
commonTemplatesPipelinePath="scripts/pipelines/common/templates/deploy-cloud-run"
# YAML file name.
yamlFile="deploy-cloud-run-pipeline.yml"
# Script name.
scriptFile="deploy-cloud-run.sh"
# Source branch.
sourceBranch="feature/deploy-cloud-run-pipeline"
# Description of the trigger
triggerDescription="Trigger for deploy-cloud-run pipeline"
# Branch trigger
branchTrigger='none'

# Function that copies the script to build the application.
function copyScript {
    # Copy the script.
    cp "${hangarPath}/${commonTemplatesPipelinePath}/${scriptFile}" "${localDirectory}/${scriptFilePath}/${scriptFile}"
    cp "${hangarPath}/${templatesPath}/deploy-cloud-run-setup-environment.sh" "${localDirectory}/${scriptFilePath}/deploy-cloud-run-setup-environment.sh"
}
# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
    # Setting the list of variable that will be used for this trigger
    [ "$port" == "" ] && port=8080

    # We get the name of the registry from the full image name
    firstPartImage=$(echo $imageName | cut -d'/' -f1)
    echo $firstPartImage | grep "\." > /dev/null && registry=$firstPartImage || registry="docker.io"

    subsitutionVariable="_SERVICE_NAME=${serviceName},_IMAGE_NAME=${imageName},_GCLOUD_REGION=${gCloudRegion},_PORT=${port},_REGISTRY=${registry}"
}
